Installation Instructions (Windows)
for Materials Data Curation Project

These notes are for requirement 1.A7 of the Product Backlog (http://goo.gl/ce9SNz) 

Setup:

For python:

1)	Download python 2.7 for windows 32bits (https://www.python.org/download/)
2)	Add to PATH:
C:\Python27\
C:\Python27\Scripts

For pip:

We need pip to do the installation of the required dependencies.  pip requires setuptools and it has to be installed first, before pip can run: http://www.pip-installer.org/en/latest/installing.html 

1)	Download get-pip.py
2)	In a command prompt :
python get-pip.py 


For the virtual environment:

1)	In a command prompt:
pip install virtualenvwrapper-win
2)	Add environment variable (Win 7 :Start, right click on Computer, Properties, click on Advance system settings in the left panel, go to advanced tab, Environment Variables…, New)
WORKON_HOME=%USERPROFILE%\Develop\Envs
3)	In a command prompt and then :
mkdir %WORKON_HOME%
cd %WORKON_HOME%
mkvirtualenv mgi
4)	To use the environment:
workon mgi (the prompt will change and become mgi. You should always see the mgi prompt when installing new packages)

For ZeroMQ:

1)	In a command prompt:
pip install pyzmq

For Jena:

1)	Be sure that the folder <PROJECT PATH>\mdcs\data exists and contains a folder named ts. Otherwise, in a command prompt:
cd <PROJECT PATH>\mdcs
2)	Be sure that a jdk7 is installed on your computer and that it is in your path. In a command prompt, the following command should display the version of javac (1.7.*):
javac –version

Otherwise:
-	Download a jdk7 from http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html 
-	Install the jdk
-	Add C:\Program Files\Java\jdk1.7.0_60\bin to your path.

3)	In a command prompt:
cd <PROJECT PATH>\mdcs\rdf
javac -cp “lib/*” RdfServer.java SparqlServer.java JenaServers.java
java -cp “lib/*;.” JenaServers -rdfserver_endpoint “tcp://127.0.0.1:5555” -sparqlserver_endpoint “tcp://127.0.0.1:5556” -tdb_directory <TS PATH> -project_uri <PROJECT URI>

Command Example: C:\Users\<username>\workspace\MDCS_PROJECT\mdcs\rdf>java -cp "lib/*;." JenaServers -rdfserver_endpoint "tcp://127.0.0.1:5555" -sparqlserver_endpoint "tcp://127.0.0.1:5556"  -tdb_directory "C:\Users\<username>\workspace\MDCS_Project\mdcs\data\ts" -project_uri “http://www.example.com/”

For MongoDB:

1)	Download Mongo db (http://www.mongodb.org/downloads) and install it in C:.
2)	In a command prompt :
c:
mongod –dbpath PROJECT_PATH\data\db

For Mongoengine:

1)	In a command prompt :
pip install mongoengine (http://docs.mongoengine.org/guide/installing.html) 


For Django/Dajax/Dajaxice:
1)	In a command prompt :
pip install Django (https://docs.djangoproject.com/en/1.6/topics/install/) 
pip install django-dajax (http://django-dajax.readthedocs.org/en/latest/installation.html) 
pip install django-dajaxice (http://django-dajaxice.readthedocs.org/en/latest/installation.html) 

Go to C:\Users\<username>\Develop\mgi\Lib\site-packages and modify the following files to make dajaxice work:

Any Python version : 
-	In dajaxice\core\__init__.py :  
o	Replace :
•	from Dajaxice 
o	By :
•	from .Dajaxice
-	In dajaxice\urls. py
o	Replace :
•	from django.conf.urls.defaults import *
o	By :
•	from django.conf.urls import patterns, url, include

Python 3.* :
-	In Views.py :
o	Change safe_dict(d) to :

def safe_dict(d):
                                """
                                Recursively clone json structure with UTF-8 dictionary keys
                                http://www.gossamer-threads.com/lists/python/bugs/684379
                                """
                                if isinstance(d, dict):
                                                return dict([(k, safe_dict(v)) for k, v in d.items()])
                                elif isinstance(d, list):
                                                return [safe_dict(x) for x in d]
                                else:
                                                return d



For ldap:

1)	Install the django-auth-ldap package:
a.	Download django-auth-ldap package from pypi (https://pypi.python.org/pypi/django-auth-ldap/1.2.0)
b.	In a command prompt:
cd PATH_TO_django-auth-ldap_FOLDER
python setup.py install build


For Django Rest Framework:

1)	In a command prompt :
pip install djangorestframework (http://www.django-rest-framework.org/)
pip install django-rest-framework-mongoengine
pip install django-rest-swagger

For MS Excel to HDF5 translation/mapping:

1)	In a command prompt :
pip install xlrd

For lxml:

1)	Download lxml from pypi (https://pypi.python.org/pypi/lxml/2.3)
a.	Use the Windows link for Python 2.7 : lxml-2.3.win32-py2.7.exe (win32)
2)	Run the installer
a.	If you use a virtual environment. 
You can’t change the destination folder set in the installer so you will have to install the package in the specified folder (C:\Python27\Lib\site-packages\) and then copy the lxml directories from C:\Python27\Lib\site-packages\ to %USERPROFILE%\Develop\Envs\mgi\Lib\site-packages.

For xmltodict:

1)	In a command prompt :
pip install xmltodict

For dateutil:
1)	In a command prompt:
pip install python-dateutil

For Requests:
1)	In a command prompt:
pip install requests


To Run software:

1)	Run mongodb. In a command prompt :
mongod –dbpath PROJECT_PATH\data\db

2)	Run Jena. In a command prompt :
java -cp “lib/*;.” JenaServers -rdfserver_endpoint “tcp://127.0.0.1:5555” -sparqlserver_endpoint “tcp://127.0.0.1:5556” -tdb_directory <TS PATH> -project_uri <PROJECT URI>

3)	Run the MDCS. In a command prompt :
workon mgi
cd path_to_mdcs_folder
python manage.py runserver

To be able to access the system remotely, instead of using python manage.py runserver, use: python manage.py runserver 0.0.0.0:<port>

Access:

For Materials Data Curation System, Go to:  http://127.0.0.1:8000/ 

For Materials Data Curation Administration, Go to:  http://127.0.0.1:8000/admin/ 
